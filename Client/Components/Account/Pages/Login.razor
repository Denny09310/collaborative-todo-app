@page "/account/login"
@using System.ComponentModel.DataAnnotations
@using Client.Identity.Models
@attribute [AllowAnonymous]

@inject IAccountManagement Account
@inject NavigationManager Navigation
@inject ToastService Toast

<div class="flex min-h-screen items-center justify-center">
    <div class="mt-7 min-w-sm rounded-xl border-gray-200 bg-white shadow-2xs md:min-w-md md:border dark:border-neutral-700 dark:bg-neutral-900">
        <div class="p-4 sm:p-7">
            <div class="text-center">
                <h1 class="block text-2xl font-bold text-gray-800 dark:text-white">Sign in</h1>
                <p class="mt-2 text-sm text-gray-600 dark:text-neutral-400">
                    Don't have an account yet?
                    <a href="account/register" class="font-medium text-blue-600 decoration-2 hover:underline focus:underline focus:outline-hidden dark:text-blue-500">
                        Sign up here
                    </a>
                </p>
            </div>

            <div class="mt-5">
                <GoogleButton Text="Sign in with Google" />

                <div class="flex items-center py-3 text-xs text-gray-400 uppercase before:me-6 before:flex-1 before:border-t before:border-gray-200 after:ms-6 after:flex-1 after:border-t after:border-gray-200 dark:text-neutral-500 dark:before:border-neutral-600 dark:after:border-neutral-600">Or</div>

                <!-- Form -->
                <EditForm Model="@Input" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />

                    <div class="grid gap-y-4">
                        <!-- Form Group -->
                        <div>
                            <label for="email" class="mb-2 block text-sm dark:text-white">Email</label>
                            <InputText @bind-Value="Input.Email" type="email" id="email" class="block w-full rounded-lg border-gray-200 px-4 py-2.5 focus:border-blue-500 focus:ring-blue-500 disabled:pointer-events-none disabled:opacity-50 sm:py-3 sm:text-sm dark:placeholder-neutral-500 dark:border-neutral-700 dark:bg-neutral-900 dark:text-neutral-400 dark:focus:ring-neutral-600" aria-describedby="email-error" />
                            <ValidationMessage For="@(() => Input.Email)" class="mt-2 hidden text-xs text-red-600" id="email-error" />
                        </div>
                        <!-- End Form Group -->
                        <!-- Form Group -->
                        <div>
                            <div class="flex flex-wrap items-center justify-between gap-2">
                                <label for="password" class="mb-2 block text-sm dark:text-white">Password</label>
                                <a class="inline-flex items-center gap-x-1 text-sm font-medium text-blue-600 decoration-2 hover:underline focus:underline focus:outline-hidden dark:text-blue-500" href="../examples/html/recover-account.html">Forgot password?</a>
                            </div>
                            <InputText @bind-Value="Input.Password" type="password" id="password" class="block w-full rounded-lg border-gray-200 px-4 py-2.5 focus:border-blue-500 focus:ring-blue-500 disabled:pointer-events-none disabled:opacity-50 sm:py-3 sm:text-sm dark:placeholder-neutral-500 dark:border-neutral-700 dark:bg-neutral-900 dark:text-neutral-400 dark:focus:ring-neutral-600" aria-describedby="password-error" />
                            <ValidationMessage For="@(() => Input.Password)" class="mt-2 hidden text-xs text-red-600" id="password-error" />
                        </div>
                        <!-- End Form Group -->
                        <!-- Checkbox -->
                        <div class="flex items-center">
                            <div class="flex">
                                <input id="remember-me" name="remember-me" type="checkbox" class="mt-0.5 shrink-0 rounded-sm border-gray-200 text-blue-600 focus:ring-blue-500 dark:border-neutral-700 dark:bg-neutral-800 dark:checked:border-blue-500 dark:checked:bg-blue-500 dark:focus:ring-offset-gray-800">
                            </div>
                            <div class="ms-3">
                                <label for="remember-me" class="text-sm dark:text-white">Remember me</label>
                            </div>
                        </div>
                        <!-- End Checkbox -->

                        <button type="submit" class="inline-flex w-full items-center justify-center gap-x-2 rounded-lg border border-transparent bg-blue-600 px-4 py-3 text-sm font-medium text-white hover:bg-blue-700 focus:bg-blue-700 focus:outline-hidden disabled:pointer-events-none disabled:opacity-50">Sign in</button>
                    </div>
                </EditForm>
                <!-- End Form -->
            </div>
        </div>
    </div>
</div>

@code 
{
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    public async Task HandleValidSubmit()
    {
        var result = await Account.LoginAsync(Input.Email, Input.Password);

        if (result.Succeeded && !string.IsNullOrEmpty(ReturnUrl))
        {
            Navigation.NavigateTo(ReturnUrl);
            return;
        }

        await Toast.ErrorAsync(result.ErrorList[0]);
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } = string.Empty;

        [Required]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } = string.Empty;
    }
}
