@namespace Client.Shared
@using System.ComponentModel.DataAnnotations
@using System.Security.Claims

@inject ToastService Toast
@inject IApiClient Api

<div class="rounded-xl bg-white p-4 shadow-md">
    <h2 class="mb-4 text-xl font-semibold">New Project</h2>
    <EditForm Model="@Input" OnValidSubmit="HandleSubmit" class="space-y-3">
        <DataAnnotationsValidator />
        <InputText @bind-Value="Input.Name" type="text" placeholder="Project name"class="w-full rounded-lg border-gray-300 focus:ring focus:ring-indigo-500" />
        <InputTextArea @bind-Value="Input.Description" placeholder="Description"class="w-full rounded-lg border-gray-300 focus:ring focus:ring-indigo-500"></InputTextArea>
        <button type="submit" class="inline-flex items-center rounded-lg bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700">
            Create Project
        </button>
    </EditForm>
</div>

@code 
{
    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;

    [Parameter] public EventCallback OnProjectCreated { get; set; }

    private InputModel Input { get; set; } = new();

    private async Task HandleSubmit()
    {
        var state = await AuthenticationStateTask;
        var user = state.User;

        var userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;

        if (string.IsNullOrEmpty(userId))
        {
            await Toast.ErrorAsync("You are no longer authenticated. Please login again.");
            return;
        }

        await Api.CreateProject(new()
        {
            OwnerId = userId,
            Name = Input.Name,
            Description = Input.Description,
        });

        Input = new();
        await OnProjectCreated.InvokeAsync();
    }

    private sealed class InputModel
    {
        [Required]
        public string Name { get; set; } = "";

        [Required]
        public string Description { get; set; } = "";
    }
}
