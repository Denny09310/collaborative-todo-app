{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Server",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7232"
    }
  ],
  "paths": {
    "/api/authentication/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Login",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Register",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request2"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/refresh-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "RefreshToken",
        "requestBody": {
          "x-name": "TokenRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TokenResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TokenRequest"
          },
          {
            "type": "object",
            "description": "base dto for access/refresh token responses",
            "additionalProperties": false,
            "properties": {
              "AccessToken": {
                "type": "string",
                "description": "the jwt access token which will be valid for the duration specified by AccessExpiry"
              }
            }
          }
        ]
      },
      "TokenRequest": {
        "type": "object",
        "description": "base dto for access/refresh token renewal requests",
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "string",
            "description": "unique identifier of a user"
          },
          "RefreshToken": {
            "type": "string",
            "description": "a single-use refresh token which will be valid for the duration specified by RefreshExpiry"
          }
        }
      },
      "Request": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Email": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "description": "RFC7807 compatible problem details/ error response class. this can be used by configuring startup like so:\napp.UseFastEndpoints(c => c.Errors.UseProblemDetails())",
        "additionalProperties": false,
        "properties": {
          "Type": {
            "type": "string",
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"
          },
          "Title": {
            "type": "string",
            "default": "One or more validation errors occurred."
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 400
          },
          "Instance": {
            "type": "string",
            "default": "/api/route"
          },
          "TraceId": {
            "type": "string",
            "default": "0HMPNHL0JHL76:00000001"
          },
          "Detail": {
            "type": "string",
            "description": "the details of the error",
            "nullable": true
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails_Error"
            }
          }
        }
      },
      "ProblemDetails_Error": {
        "type": "object",
        "description": "the error details object",
        "additionalProperties": false,
        "properties": {
          "Name": {
            "type": "string",
            "description": "the name of the error or property of the dto that caused the error",
            "default": "Error or field name"
          },
          "Reason": {
            "type": "string",
            "description": "the reason for the error",
            "default": "Error reason"
          },
          "Code": {
            "type": "string",
            "description": "the code of the error",
            "nullable": true
          },
          "Severity": {
            "type": "string",
            "description": "the severity of the error",
            "nullable": true
          }
        }
      },
      "Request2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Email": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}